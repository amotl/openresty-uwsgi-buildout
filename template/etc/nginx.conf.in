
#user  nobody;
worker_processes  1;

pid        ${buildout:directory}/var/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       ${openresty:location}/nginx/conf/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  ${buildout:directory}/var/nginx/access.log  main;
    error_log  ${buildout:directory}/var/nginx/error.log debug;

    sendfile        on;

    keepalive_timeout  65;

    server {
        listen       ${config:nginx-port};
        server_name  localhost;

        location / {
            root   ${buildout:directory}/src;
            index  index.html index.htm;
        }


        # testing subrequests against an "echo" location
        location /plain/echo/method {
            echo -n "request method was: ";
            echo $echo_request_method;
        }
        location /plain/echo/method/subrequest/echo {
            echo_subrequest POST /plain/echo/method;
        }
        location /plain/echo/method/subrequest/lua {
            content_by_lua '
                res = ngx.location.capture("/plain/echo/method", { method = ngx.HTTP_POST });
                ngx.print(res.body)
                ngx.exit(ngx.HTTP_OK)
            ';
        }


        # testing subrequests against an "uwsgi" location
        location /uwsgi/echo/method {
            include     ${openresty:location}/nginx/conf/uwsgi_params;
            uwsgi_pass  unix://${buildout:directory}/var/uwsgi/uwsgi.sock;
        }
        location /uwsgi/echo/method/subrequest/echo {
            echo_subrequest POST /uwsgi/echo/method;
        }
        location /uwsgi/echo/method/subrequest/lua {
            content_by_lua '
                res = ngx.location.capture("/uwsgi/echo/method", { method = ngx.HTTP_POST });
                ngx.print(res.body)
                ngx.exit(ngx.HTTP_OK)
            ';
        }


        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }
    }
}
